import{_ as e,v as r,b as o,R as a}from"./chunks/framework.3d3e5663.js";const h=JSON.parse('{"title":"加载iframe为什么会阻塞页面的渲染？","description":"面试常会被问到页面渲染问题以及渲染性能提升问题","frontmatter":{"title":"加载iframe为什么会阻塞页面的渲染？","description":"面试常会被问到页面渲染问题以及渲染性能提升问题","keywords":"iframe,渲染性能提升,渲染问题,性能优化,前端,面试","date":"2024-03-12T14:20:00.000Z","author":"马凯","tags":["前端","渲染问题","性能优化","知识点"],"categories":["前端"],"sidebar":{"title":"加载iframe为什么会阻塞页面的渲染？"},"isTimeLine":true},"headers":[],"relativePath":"bigWeb/knowledgePointsSummary/iframe.md","filePath":"bigWeb/knowledgePointsSummary/iframe.md","lastUpdated":1714984234000}'),i={name:"bigWeb/knowledgePointsSummary/iframe.md"},t=a('<h1 id="加载iframe为什么会阻塞页面的渲染" tabindex="-1">加载iframe为什么会阻塞页面的渲染？ <a class="header-anchor" href="#加载iframe为什么会阻塞页面的渲染" aria-label="Permalink to &quot;加载iframe为什么会阻塞页面的渲染？&quot;">​</a></h1><blockquote><p>前端面试常问的问题就是从用户输入URL到页面加载的过程，中间就会涉及到JS、iframe阻塞页面渲染的问题，如果是JS的话，因为JS会涉及到DOM操作，暂停render Tree的生成，等待JS执行完毕之后继续执行render Tree的生成，所以JS的下载会阻塞页面的渲染，那么iframe阻塞页面渲染到底是怎么回事呢？</p></blockquote><h2 id="主要原因" tabindex="-1">主要原因 <a class="header-anchor" href="#主要原因" aria-label="Permalink to &quot;主要原因&quot;">​</a></h2><p><code>iframe</code> 可能导致页面加载出现白屏现象，这通常与其加载机制和资源加载优先级有关。以下是一些原因：</p><ol><li><p><strong>资源加载阻塞</strong>：<code>iframe</code> 通常会加载另一个 HTML 页面，这意味着浏览器需要处理额外的 HTTP 请求。如果这些请求被阻塞或延迟，或者 <code>iframe</code> 中的内容非常庞大，它们可能会影响到整个页面的加载时间，导致白屏现象。</p></li><li><p><strong>渲染阻塞</strong>：如果 <code>iframe</code> 中的内容在加载和解析时消耗大量资源，这可能会阻塞主页面的渲染。这种情况通常发生在 <code>iframe</code> 加载了复杂的应用或大量的媒体内容时。</p></li><li><p><strong>同步加载</strong>：默认情况下，<code>iframe</code> 的加载是同步的，这意味着浏览器会停止解析主文档，直到 <code>iframe</code> 完全加载和解析完成。这可以导致主页面出现明显的白屏时间。</p></li><li><p><strong>网络延迟</strong>：如果 <code>iframe</code> 的源服务器响应时间慢，或者网络状况不佳，这也会增加页面的加载时间。</p></li><li><p><strong>无内容展示</strong>：在某些情况下，如果 <code>iframe</code> 的内容由于权限问题（如跨域限制）或者错误而无法加载，它可能会显示为空白，给用户造成整个页面还未加载完成的错觉。</p></li></ol><h2 id="优化方案" tabindex="-1">优化方案 <a class="header-anchor" href="#优化方案" aria-label="Permalink to &quot;优化方案&quot;">​</a></h2><p>为了减少 <code>iframe</code> 对页面加载性能的影响，可以考虑以下优化措施：</p><ul><li><strong>异步加载</strong>：使用 JavaScript 动态地加载 <code>iframe</code>，以避免阻塞主页面的渲染。</li><li><strong>懒加载</strong>：只在用户滚动到 <code>iframe</code> 附近时才加载它，这样可以确保主页面先加载完毕。</li><li><strong>优化 <code>iframe</code> 内容</strong>：减少 <code>iframe</code> 中加载的资源数量和大小，优化其内部的 HTML、CSS 和 JavaScript。</li><li><strong>预加载技术</strong>：使用预加载技术来优先加载关键资源。</li><li><strong>监控性能</strong>：使用浏览器的性能监控工具来检测 <code>iframe</code> 的加载对页面性能的影响。</li></ul>',8),d=[t];function s(c,n,l,m,f,p){return r(),o("div",null,d)}const u=e(i,[["render",s]]);export{h as __pageData,u as default};
