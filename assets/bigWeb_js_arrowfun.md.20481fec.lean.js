import{_ as s,v as a,b as n,R as l}from"./chunks/framework.3d3e5663.js";const d=JSON.parse('{"title":"说说你对箭头函数的理解?","description":"","frontmatter":{"sidebar":{"title":"说说你对箭头函数的理解?","step":10},"isTimeLine":true,"title":"说说你对箭头函数的理解?","date":"2020-04-14T00:00:00.000Z","author":"马凯","tags":["前端","JavaScript"],"categories":["前端"]},"headers":[],"relativePath":"bigWeb/js/arrowfun.md","filePath":"bigWeb/js/arrowfun.md","lastUpdated":1692598079000}'),o={name:"bigWeb/js/arrowfun.md"},p=l(`<h1 id="说说你对箭头函数的理解" tabindex="-1">说说你对箭头函数的理解? <a class="header-anchor" href="#说说你对箭头函数的理解" aria-label="Permalink to &quot;说说你对箭头函数的理解?&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>箭头函数是es6中对函数的一种全新写法，将函数的简洁性发挥到极致。</p></div><h2 id="简单使用" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用" aria-label="Permalink to &quot;简单使用&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 可以直接返回结果</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// const c = (name, age) =&gt; {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     return name + age</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span></code></pre></div><h2 id="箭头函数和普通函数的区别" tabindex="-1">箭头函数和普通函数的区别 <a class="header-anchor" href="#箭头函数和普通函数的区别" aria-label="Permalink to &quot;箭头函数和普通函数的区别&quot;">​</a></h2><h3 id="_1-箭头函数比普通函数更加简洁" tabindex="-1">1. 箭头函数比普通函数更加简洁 <a class="header-anchor" href="#_1-箭头函数比普通函数更加简洁" aria-label="Permalink to &quot;1. 箭头函数比普通函数更加简洁&quot;">​</a></h3><ul><li>如果没有参数，可以直接写一个空括号</li><li>如果只有一个参数，可以省略括号包裹(),例如：name =&gt; console.log(name)</li><li>如果函数返回值只有一句，可以直接一行书写，省略花括号</li></ul><h3 id="_2-箭头函数没有this" tabindex="-1">2. 箭头函数没有this <a class="header-anchor" href="#_2-箭头函数没有this" aria-label="Permalink to &quot;2. 箭头函数没有this&quot;">​</a></h3><p>箭头函数的this，永远指向函数调用方所在的作用域，箭头函数本身没有this</p><p>举个例子：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">global</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">inner</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">id</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">b</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// eslint-disable-next-line @typescript-eslint/no-invalid-this</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">id</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">a</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">// inner</span></span>
<span class="line"><span style="color:#BABED8;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">b</span><span style="color:#BABED8;">() </span><span style="color:#676E95;font-style:italic;">// global</span></span></code></pre></div><p>因为obj.b的调用环境属于顶层作用域 window，那么顶层作用域内的生命id为global，所以obj.b的执行结果为global</p><h3 id="_3-箭头函数没有构造函数" tabindex="-1">3. 箭头函数没有构造函数 <a class="header-anchor" href="#_3-箭头函数没有构造函数" aria-label="Permalink to &quot;3. 箭头函数没有构造函数&quot;">​</a></h3><blockquote><p>因为没有构造函数，没有原型链对象</p></blockquote><ul><li>箭头函数不能使用new创建</li><li>箭头函数不能使用bind、apply、call改变其作用域</li><li>箭头函数没有自身的this</li><li>箭头函数没有自己的arguments，不过能够使用...args进行替换</li><li>箭头函数没有prototype指向，因为原型对象</li></ul>`,15),e=[p];function t(c,r,i,y,D,F){return a(),n("div",null,e)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
