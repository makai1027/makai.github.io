import{_ as s,v as a,b as n,R as l}from"./chunks/framework.3d3e5663.js";const d=JSON.parse('{"title":"webpack/vite构建优化、热更新原理","description":"","frontmatter":{"title":"webpack/vite构建优化、热更新原理","date":"2024-03-12T18:20:00.000Z","author":"马凯","tags":["前端","性能优化","知识点"],"categories":["前端"],"sidebar":{"title":"webpack/vite构建优化、热更新原理"},"isTimeLine":true},"headers":[],"relativePath":"bigWeb/knowledgePointsSummary/webpack&vite.md","filePath":"bigWeb/knowledgePointsSummary/webpack&vite.md","lastUpdated":1710229590000}'),o={name:"bigWeb/knowledgePointsSummary/webpack&vite.md"},p=l(`<h1 id="webpack-vite构建优化、热更新原理" tabindex="-1">webpack/vite构建优化、热更新原理 <a class="header-anchor" href="#webpack-vite构建优化、热更新原理" aria-label="Permalink to &quot;webpack/vite构建优化、热更新原理&quot;">​</a></h1><h2 id="webpack-vite热更新原理" tabindex="-1">webpack &amp; vite热更新原理 <a class="header-anchor" href="#webpack-vite热更新原理" aria-label="Permalink to &quot;webpack &amp; vite热更新原理&quot;">​</a></h2><h3 id="webpack-热更新原理" tabindex="-1">webpack 热更新原理 <a class="header-anchor" href="#webpack-热更新原理" aria-label="Permalink to &quot;webpack 热更新原理&quot;">​</a></h3><p>Webpack 的热更新（Hot Module Replacement, HMR）是一种极为有用的功能，它允许在应用运行时替换、添加或删除模块，而无需重新加载整个页面。这对于前端开发尤其有价值，因为它可以显著提高开发效率并保持应用状态。下面是 Webpack 热更新的基本原理：</p><ol><li><p><strong>Webpack Dev Server</strong>: 当使用 Webpack Dev Server 时，它启动了一个 HTTP 服务器用于服务网页和一个 WebSocket 服务器用于实现 HMR。当文件发生变化时，这些变化会被 Webpack 检测到。</p></li><li><p><strong>构建更新</strong>：一旦发现文件更改，Webpack 会重新编译构建那个模块，并且生成一个所谓的 &quot;更新块&quot;（update chunk）。这个更新块包含了新版本的模块及其依赖关系的信息。</p></li><li><p><strong>通知客户端</strong>：Webpack Dev Server 会通过 WebSocket 向客户端（浏览器）发送消息，告知有模块更新。</p></li><li><p><strong>下载更新</strong>：浏览器接收到更新的消息后，会通过 HTTP 请求从服务器获取更新块。</p></li><li><p><strong>替换模块</strong>：一旦最新的模块被下载，Webpack 的 HMR 运行时会根据这些新模块替换旧模块。这个过程发生在浏览器端。</p></li><li><p><strong>失败处理</strong>：如果某个模块或其依赖不能被热替换，那么 HMR 将失败。在这种情况下，一个完整的页面刷新是必要的。</p></li></ol><p>整个过程不需要页面刷新，可以保持应用的状态不变。对于一些复杂的模块更新逻辑，可能需要在模块代码中添加特定的 HMR 处理代码来确保正确的更新。例如，在 React 开发中，通常会结合 React Hot Loader 或其他类似的库来处理组件级别的热替换。</p><h3 id="vite-热更新原理" tabindex="-1">vite 热更新原理 <a class="header-anchor" href="#vite-热更新原理" aria-label="Permalink to &quot;vite 热更新原理&quot;">​</a></h3><p>Vite 的热更新（Hot Module Replacement，简称 HMR）是一种非常有效的开发特性，它允许开发者在运行时更新应用中的模块，而无需进行完整的页面刷新。这不仅提高了开发效率，还保持了应用的状态。Vite 的热更新原理可以大致分为以下几个步骤：</p><ol><li><p><strong>启动开发服务器</strong>：当你启动 Vite 开发服务器时，它为你的项目中的每个模块提供了一个特殊的版本，这些版本都包含了可以与服务器通信的代码。</p></li><li><p><strong>模块替换</strong>：当你修改并保存一个文件时，Vite 会检测到这一变化，并重新编译改变的模块。</p></li><li><p><strong>通知浏览器</strong>：编译完成后，Vite 通过 WebSocket 连接向浏览器发送一个消息，通知它发生了变更。</p></li><li><p><strong>模块热替换</strong>：浏览器收到通知后，会请求更新后的模块。Vite 利用 ES 模块的动态导入功能（<code>import()</code>）来获取更新后的模块。</p></li><li><p><strong>更新模块</strong>：获取到更新后的模块后，Vite 会进行热替换。这个过程不需要刷新整个页面，只替换更改的部分。</p></li><li><p><strong>状态保持</strong>：在理想情况下，应用的状态可以保持不变，因为只有更改的部分被重新加载了。</p></li><li><p><strong>回退到全页面刷新</strong>：如果热替换失败，或者某些类型的更改无法通过 HMR 应用（如 HTML 和 CSS 的根级更改），Vite 会回退到执行完整的页面刷新来确保更改被正确加载。</p></li></ol><p>Vite 的 HMR 功能依赖于现代浏览器对原生 ES 模块的支持，这使得它能够比基于传统打包器的 HMR 更快、更高效。此外，Vite 专门为 Vue 和 React 等现代前端框架提供了额外的 HMR 集成，以支持框架特有的热更新逻辑。</p><h2 id="webpack如何实现公共依赖作为项目单独打包" tabindex="-1">webpack如何实现公共依赖作为项目单独打包 <a class="header-anchor" href="#webpack如何实现公共依赖作为项目单独打包" aria-label="Permalink to &quot;webpack如何实现公共依赖作为项目单独打包&quot;">​</a></h2><p>你描述的场景可以使用 webpack 的 Module Federation 插件来实现。Module Federation 是 webpack 5 新增的一个插件,允许多个独立构建的应用程序共享模块,它支持在运行时动态加载模块,可以大大提高构建性能和代码复用率。</p><p>具体步骤如下:</p><ol><li><strong>创建一个独立的公共依赖项目</strong></li></ol><p>首先,创建一个新的项目,专门用于构建公共依赖模块。在该项目的 <code>webpack.config.js</code> 中,通过 <code>ModuleFederationPlugin</code> 插件来暴露需要共享的模块。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> ModuleFederationPlugin </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">webpack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">container</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ModuleFederationPlugin</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">commonDependencies</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">library</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">var</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">commonDependencies</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">filename</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">remoteEntry.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">exposes</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">vue</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 暴露 vue 模块</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 可以暴露更多其他公共依赖</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这里我们将 <code>vue</code> 模块作为公共依赖进行暴露,并命名为 <code>commonDependencies</code>。构建后会生成一个 <code>remoteEntry.js</code> 文件,作为其他应用加载这些模块的入口。</p><ol start="2"><li><strong>在各个项目中引入公共依赖</strong></li></ol><p>接下来,在需要使用公共依赖的项目中,通过 <code>ModuleFederationPlugin</code> 插件的 <code>remotes</code> 配置来引入公共依赖。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> ModuleFederationPlugin </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">webpack</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">container</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ModuleFederationPlugin</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">app1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">remotes</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">commonDependencies</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">commonDependencies@http://localhost:3000/remoteEntry.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这里我们配置了一个远程模块 <code>commonDependencies</code>,指向了公共依赖项目构建出的 <code>remoteEntry.js</code> 文件。你可以使用一个 HTTP 服务器来提供这个文件,或者将它部署到一个 CDN 上。</p><ol start="3"><li><strong>在项目代码中使用公共依赖</strong></li></ol><p>最后,在项目的代码中就可以像使用本地模块一样使用远程导入的公共依赖了。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">commonDependencies/vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><p>通过这种方式,你可以将公共依赖单独构建为一个独立的项目,并在需要使用时动态引入。这不仅可以实现代码复用,还可以提高构建性能,因为公共依赖只需构建一次,其他项目只需构建自己的代码。</p><p>需要注意的是,Module Federation 插件目前还处于实验阶段,在生产环境中使用时需要谨慎评估。同时,它也有一些已知的限制和缺陷,比如不支持 CSS 模块共享、不支持 ES6 模块导出等。但总的来说,它为解决模块共享和代码复用问题提供了一种全新的思路和方案。</p><h2 id="module-federation-和-externals的区别是什么" tabindex="-1">module federation 和 externals的区别是什么? <a class="header-anchor" href="#module-federation-和-externals的区别是什么" aria-label="Permalink to &quot;module federation 和 externals的区别是什么?&quot;">​</a></h2><p>你提出了一个很好的观点。是的,使用 webpack 的 Module Federation 插件和 externals 配置在解决公共依赖共享方面确实有一些相似之处,但它们也有一些重要的区别:</p><ol><li><strong>加载方式不同</strong></li></ol><p>externals 是告诉 webpack 不要打包某些模块,而是在运行时从外部获取这些依赖。这通常需要提前将依赖暴露为全局变量或通过别的方式手动引入。而 Module Federation 则是在构建时将依赖模块打包到一个单独的 chunk 中,在运行时通过网络动态加载这个 chunk,无需提前加载或暴露为全局变量。</p><ol start="2"><li><strong>更新和部署</strong></li></ol><p>使用 externals 时,如果公共依赖发生更新,你需要手动更新各个项目并重新部署。而使用 Module Federation,只需要重新构建并部署公共依赖项目,其他项目不需要改动就可以获取最新的依赖。</p><ol start="3"><li><strong>支持情况</strong></li></ol><p>externals 是 webpack 较早就支持的功能,而 Module Federation 是 webpack 5 新增的一个实验性插件,目前还存在一些已知限制。</p><ol start="4"><li><strong>模块作用域</strong></li></ol><p>externals 引入的模块会作用于全局作用域,可能会导致命名冲突等问题。而 Module Federation 加载的模块是作用于局部作用域的,降低了潜在的命名冲突风险。</p><ol start="5"><li><strong>调试和错误处理</strong></li></ol><p>使用 externals 时,难以在开发环境中对外部依赖进行调试和错误处理。Module Federation 则能够更好地支持开发者工具,提供更好的开发体验。</p><p>总的来说,Module Federation 是一个更加现代化、更加智能的解决方案,提供了比 externals 更加完善的模块共享和加载机制。当然,它目前还处于较早的实验阶段,在生产环境中使用时需要评估其局限性。而 externals 则是一个更加成熟、简单的方案,可以作为一种备选方案。具体选择哪种方式,需要根据项目的具体需求和约束条件来权衡。</p><h2 id="vite-和-angular-cli能否实现module-federation功能" tabindex="-1">vite 和 angular-cli能否实现module federation功能？ <a class="header-anchor" href="#vite-和-angular-cli能否实现module-federation功能" aria-label="Permalink to &quot;vite 和 angular-cli能否实现module federation功能？&quot;">​</a></h2><p>是的,Vite 和 Angular CLI 都可以实现 Module Federation 功能,但需要通过一些额外的配置或插件。</p><p><strong>Vite</strong></p><p>Vite 本身并不直接支持 Module Federation,但是你可以使用一个基于 Vite 的插件 <a href="https://github.com/originerd/vite-plugin-federation" target="_blank" rel="noreferrer">vite-plugin-federation</a> 来实现这个功能。该插件提供了在 Vite 中使用 Module Federation 的能力。</p><p><strong>Angular CLI</strong></p><p>对于 Angular CLI,你需要使用一个名为 <a href="https://github.com/gmplemen/webpack-federation-toolbox" target="_blank" rel="noreferrer">webpack-federation-toolbox</a> 的工具。它提供了在 Angular CLI 项目中启用 Module Federation 的脚本和工作流程。</p><p>使用 <code>webpack-federation-toolbox</code> 的步骤如下:</p><ol><li>安装 <code>webpack-federation-toolbox</code> 作为开发依赖</li><li>在项目根目录下创建一个 <code>webpack.config.js</code> 文件</li><li>运行 <code>webpack-federation-toolbox init</code> 命令初始化配置</li><li>按照引导完成相关配置</li><li>修改 <code>angular.json</code> 文件,将构建命令改为使用自定义的 <code>webpack.config.js</code></li></ol><p>完成这些步骤后,你就可以在 Angular CLI 项目中使用 Module Federation 功能了。</p><p>需要注意的是,Module Federation 目前仍然是一个实验性的功能,在生产环境中使用时需要格外小心。同时,由于 Vite 和 Angular CLI 本身并不直接支持该功能,所以需要使用第三方工具和插件,可能会存在一些潜在的问题和限制。在实际使用时,你需要根据具体情况进行评估和测试。</p><h2 id="module-federation在vite-和-angular-cli中的实现方式" tabindex="-1">module federation在vite 和 angular-cli中的实现方式？ <a class="header-anchor" href="#module-federation在vite-和-angular-cli中的实现方式" aria-label="Permalink to &quot;module federation在vite 和 angular-cli中的实现方式？&quot;">​</a></h2><p>好的,我来提供一些具体的实现方法和代码示例:</p><p><strong>1. Vite 中使用 vite-plugin-federation</strong></p><p>首先需要安装 <code>vite-plugin-federation</code> 插件:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vite-plugin-federation</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div><p>然后在 <code>vite.config.js</code> 中配置该插件:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vite</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> federation </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vite-plugin-federation</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">federation</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">app1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 应用名称</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">remotes</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 远程依赖映射</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">shared</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:5000/assets/remoteEntry.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">shared</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 需要共享的模块</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><p>在代码中使用远程模块:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">createApp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shared/vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 使用远程 Vue 模块</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">createApp</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">)</span></span></code></pre></div><p><strong>2. Angular CLI 中使用 webpack-federation-toolbox</strong></p><p>安装 <code>webpack-federation-toolbox</code>:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">webpack-federation-toolbox</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--save-dev</span></span></code></pre></div><p>创建 <code>webpack.config.js</code> 文件:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> shareAll</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> withModuleFederationPlugin </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">webpack-federation-toolbox</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">withModuleFederationPlugin</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">app1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">exposes</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">./Module</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/app/remote-entry/entry.module.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">shared</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">shareAll</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">...</span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">webpack-federation-toolbox/shared-angular</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><p>修改 <code>angular.json</code> 文件:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">projects</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">app1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">architect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#916B53;">builder</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@angular-devkit/build-angular:browser</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#916B53;">options</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;">customWebpackConfig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">              </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FF9CAC;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./webpack.config.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">          </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在另一个 Angular 应用中使用远程模块:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 远程入口模块</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">app1/Module</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">m</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 注册远程模块</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div><p>这些只是最基本的示例,在实际使用中你可能还需要进行更多的配置和调整。同时需要注意,Module Federation 目前仍处于实验阶段,在生产环境使用时需要非常谨慎,并密切关注它的最新进展。</p>`,68),e=[p];function t(c,r,D,y,F,i){return a(),n("div",null,e)}const E=s(o,[["render",t]]);export{d as __pageData,E as default};
